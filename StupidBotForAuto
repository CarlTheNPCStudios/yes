local TeleportCheck = false
local TPService = game:GetService("TeleportService")
queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
PlaceId, JobId = game.PlaceId, game.JobId


game.Players.LocalPlayer.OnTeleport:Connect(function(State)
	if  (not TeleportCheck) and queueteleport then
		TeleportCheck = true
		queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/CarlTheNPCStudios/yes/refs/heads/main/StupidBotForAuto'))()") --ok its ready
	end
end)


HttpService = game:GetService("HttpService")
GuiService = game:GetService("GuiService")
Players = game:GetService("Players")
TeleportService = game:GetService("TeleportService")
GuiService.ErrorMessageChanged:Connect(function()


    if httprequest then
        local servers = {}
        local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", PlaceId)})
        local body = HttpService:JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
        else
            return notify("Serverhop", "Couldn't find a server.")
        end
    else
        notify("Incompatible Exploit", "Your exploit does not support this command (missing request)")
    end

	end)


task.wait(2)
for i,v in pairs(workspace:GetDescendants()) do 
if v.Name == ("TouchInterest") then
v:Destroy()
end
end

local DELAY = 0--In Seconds
local TimeToReachTarget = 0.01
local BoxesBeforeBreak = 999

local DelayForBreak = 0

local char = game.Players.LocalPlayer.Character
local ts = game:GetService("TweenService")
local hrp = char.HumanoidRootPart

local CurrentDelay = DELAY

local Current = 0

task.spawn(function()
while task.wait(0.1) do
for i,v in pairs(workspace.BoxPositions:GetChildren()) do
if v:FindFirstChildOfClass("Model") then
Current +=1

if Current < BoxesBeforeBreak then
CurrentDelay = DELAY
else
CurrentDelay = DelayForBreak 
Current = 0
end


local crate = v:FindFirstChildOfClass("Model")
local e = TweenInfo.new(TimeToReachTarget)
task.spawn(function()
while task.wait() do
local rem = game:GetService("ReplicatedStorage").RemoteEvents.BoxEvent
rem:FireServer(crate)
end
end)
ts:Create(hrp,e,{CFrame = v.CFrame}):Play()
task.wait(TimeToReachTarget+0.01)


task.wait(CurrentDelay)

end
end
end
end)


